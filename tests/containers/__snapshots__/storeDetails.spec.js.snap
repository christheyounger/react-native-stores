// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`containers.stores should render 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <TextInput
    allowFontScaling={true}
    onChangeText={[Function]}
    onSubmitEditing={[Function]}
    style={
      Object {
        "fontSize": 24,
      }
    }
    underlineColorAndroid="transparent"
  />
  <View
    style={
      Object {
        "alignItems": "stretch",
        "flexDirection": "row",
        "height": 30,
      }
    }
  >
    <View>
      <View
        accessibilityRole="button"
        accessibilityStates={Array []}
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "padding": 8,
                  "textAlign": "center",
                },
                Object {
                  "color": "red",
                },
              ]
            }
          >
            Delete
          </Text>
        </View>
      </View>
      <Modal
        animationType="slide"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={false}
        visible={false}
      >
        <View
          style={
            Object {
              "alignItems": "stretch",
              "flexDirection": "column",
              "marginTop": 22,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "stretch",
                "flexDirection": "column",
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 24,
                }
              }
            >
              Delete undefined
            </Text>
            <Text
              style={
                Object {
                  "padding": 20,
                }
              }
            >
              Are you sure you wish to 
              Delete undefined
              ?
            </Text>
            <View
              style={
                Object {
                  "alignItems": "stretch",
                  "flexDirection": "column",
                }
              }
            >
              <View
                accessibilityRole="button"
                accessibilityStates={Array []}
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {},
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#007AFF",
                          "fontSize": 18,
                          "padding": 8,
                          "textAlign": "center",
                        },
                      ]
                    }
                  >
                    No, don't
                  </Text>
                </View>
              </View>
              <View
                accessibilityRole="button"
                accessibilityStates={Array []}
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {},
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#007AFF",
                          "fontSize": 18,
                          "padding": 8,
                          "textAlign": "center",
                        },
                        Object {
                          "color": "red",
                        },
                      ]
                    }
                  >
                    Delete
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </Modal>
    </View>
  </View>
  <View>
    <Text
      style={
        Object {
          "fontSize": 21,
        }
      }
    >
      Branches
    </Text>
    <RCTScrollView
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View />
    </RCTScrollView>
  </View>
</View>
`;
